
[x] make patterns generic over the name they expect, to prevent name bugs (like
    in `flattened`)
[x] intern strings, numbers, etc. to avoid clones during passes
[?] properly scope unbound entries, block things, and so on
    [x] split declaring/resolving into mutually recursive structs responsible
        for declarative regions and locals (separation of concerns or smth)
    [ ] reduce duplication between resolving/declaration (they are very similar)
[x]Â debuggify cli diagnostic span code
[ ] querify the type checker
    [ ] constraints can probably be generated per-module
    [ ] solutions can probably be generated per-strongly-connected-module in
        topological order? probably needs to take previous results as an
        argument (or derive it, somehow) but should be doable
    [ ] a solution can be applied on as fine a resolution as is necessary
[x] force lower bound inclusivity in `ast::Clusivity`
[x] save type of names in `checked::Program`
